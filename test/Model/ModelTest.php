<?php
/**
 * ModelTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ModelTest Class Doc Comment
 *
 * @category    Class
 * @description Model
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ModelTest extends TestCase
{
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Model"
     */
    public function testModel()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "creator"
     */
    public function testPropertyCreator()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "source"
     */
    public function testPropertySource()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "updated_at"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "document_id"
     */
    public function testPropertyDocumentId()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "document"
     */
    public function testPropertyDocument()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "structure_file"
     */
    public function testPropertyStructureFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "systems_file"
     */
    public function testPropertySystemsFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "map_file"
     */
    public function testPropertyMapFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "gltf_file"
     */
    public function testPropertyGltfFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "bvh_tree_file"
     */
    public function testPropertyBvhTreeFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "preview_file"
     */
    public function testPropertyPreviewFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "viewer_360_file"
     */
    public function testPropertyViewer360File()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "xkt_file"
     */
    public function testPropertyXktFile()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "project_id"
     */
    public function testPropertyProjectId()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "world_position"
     */
    public function testPropertyWorldPosition()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "size_ratio"
     */
    public function testPropertySizeRatio()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "errors"
     */
    public function testPropertyErrors()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "warnings"
     */
    public function testPropertyWarnings()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "archived"
     */
    public function testPropertyArchived()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "north_vector"
     */
    public function testPropertyNorthVector()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "recommanded_2d_angle"
     */
    public function testPropertyRecommanded2dAngle()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }
}

<?php
/**
 * CollaborationApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CollaborationApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CollaborationApiTest extends TestCase
{
    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for acceptUserInvitation
     *
     * Accept an invitation.
     *
     */
    public function testAcceptUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for acceptValidation
     *
     * Accept a validation.
     *
     */
    public function testAcceptValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for addDocumentTag
     *
     * Add a tag to a document.
     *
     */
    public function testAddDocumentTag()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for addGroupMember
     *
     * Add a user to a group.
     *
     */
    public function testAddGroupMember()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for cancelCloudUserInvitation
     *
     * Cancel a pending invitation.
     *
     */
    public function testCancelCloudUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for cancelProjectUserInvitation
     *
     * Cancel a pending invitation.
     *
     */
    public function testCancelProjectUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for checkAccess
     *
     * Check app access from cloud.
     *
     */
    public function testCheckAccess()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for closeVisa
     *
     * Close a visa of a document.
     *
     */
    public function testCloseVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createClassification
     *
     * Create a classification.
     *
     */
    public function testCreateClassification()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createCloud
     *
     * Create a cloud.
     *
     */
    public function testCreateCloud()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createDMSTree
     *
     * Create a complete DMS tree.
     *
     */
    public function testCreateDMSTree()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createDemo
     *
     * Create a Demo project in a cloud.
     *
     */
    public function testCreateDemo()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createDocument
     *
     * Create a document.
     *
     */
    public function testCreateDocument()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createFolder
     *
     * Create a folder.
     *
     */
    public function testCreateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createManageGroup
     *
     * Create a group.
     *
     */
    public function testCreateManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createProject
     *
     * Create a project.
     *
     */
    public function testCreateProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createProjectAccessToken
     *
     * Create a token for this project.
     *
     */
    public function testCreateProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createTag
     *
     * Create a tag.
     *
     */
    public function testCreateTag()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createValidation
     *
     * Add a validation to a visa.
     *
     */
    public function testCreateValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createVisa
     *
     * Create a visa.
     *
     */
    public function testCreateVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createVisaComment
     *
     * Add a comment.
     *
     */
    public function testCreateVisaComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteAllDocumentHistory
     *
     * Delete all document history.
     *
     */
    public function testDeleteAllDocumentHistory()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteClassification
     *
     * Delete a classification.
     *
     */
    public function testDeleteClassification()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteCloud
     *
     * Delete a cloud.
     *
     */
    public function testDeleteCloud()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteCloudUser
     *
     * Remove a user from a cloud.
     *
     */
    public function testDeleteCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteDocument
     *
     * Delete the document.
     *
     */
    public function testDeleteDocument()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteDocumentTag
     *
     * Delete a tag from a document.
     *
     */
    public function testDeleteDocumentTag()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteFolder
     *
     * Delete a folder.
     *
     */
    public function testDeleteFolder()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteGroupMember
     *
     * Delete a user from a group.
     *
     */
    public function testDeleteGroupMember()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteManageGroup
     *
     * Delete a group.
     *
     */
    public function testDeleteManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteProject
     *
     * Delete a project.
     *
     */
    public function testDeleteProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteProjectAccessToken
     *
     * Delete a token.
     *
     */
    public function testDeleteProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteProjectUser
     *
     * Remove a user from a project.
     *
     */
    public function testDeleteProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteTag
     *
     * Delete the tag.
     *
     */
    public function testDeleteTag()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteValidation
     *
     * Remove a validation.
     *
     */
    public function testDeleteValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteVisa
     *
     * Remove a visa.
     *
     */
    public function testDeleteVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteVisaComment
     *
     * Remove a comment.
     *
     */
    public function testDeleteVisaComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for denyUserInvitation
     *
     * Deny an invitation.
     *
     */
    public function testDenyUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for denyValidation
     *
     * Deny a validation.
     *
     */
    public function testDenyValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getClassification
     *
     * Retrieve a classification.
     *
     */
    public function testGetClassification()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getClassifications
     *
     * Retrieve all classifications.
     *
     */
    public function testGetClassifications()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getCloud
     *
     * Retrieve one cloud.
     *
     */
    public function testGetCloud()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getCloudInvitations
     *
     * Retrieve all pending invitations in the cloud.
     *
     */
    public function testGetCloudInvitations()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getCloudSize
     *
     * Get size of the cloud.
     *
     */
    public function testGetCloudSize()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getCloudUser
     *
     * Retrieve a user in a cloud.
     *
     */
    public function testGetCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getCloudUsers
     *
     * Retrieve all users in a cloud, or a list with a filter by email.
     *
     */
    public function testGetCloudUsers()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getClouds
     *
     * Retrieve all clouds.
     *
     */
    public function testGetClouds()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getDocument
     *
     * Retrieve a document.
     *
     */
    public function testGetDocument()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getDocumentHistories
     *
     * Retrieve all document histories.
     *
     */
    public function testGetDocumentHistories()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getDocuments
     *
     * Retrieve all documents.
     *
     */
    public function testGetDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getFolder
     *
     * Retrieve a folder.
     *
     */
    public function testGetFolder()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getFolderProjectUsers
     *
     * Retrieve all users in a project with the permission on the folder.
     *
     */
    public function testGetFolderProjectUsers()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getFolders
     *
     * Retrieve all folders.
     *
     */
    public function testGetFolders()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getGroup
     *
     * Retrieve a group.
     *
     */
    public function testGetGroup()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getGroups
     *
     * Retrieve all groups.
     *
     */
    public function testGetGroups()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getManageGroup
     *
     * Retrieve a group.
     *
     */
    public function testGetManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getManageGroups
     *
     * Retrieve all groups.
     *
     */
    public function testGetManageGroups()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProject
     *
     * Retrieve a project.
     *
     */
    public function testGetProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectAccessToken
     *
     * Retrieve one token created for this project.
     *
     */
    public function testGetProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectAccessTokens
     *
     * Retrieve all tokens created for this project.
     *
     */
    public function testGetProjectAccessTokens()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectCreatorVisas
     *
     * List visas created by user.
     *
     */
    public function testGetProjectCreatorVisas()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectDMSTree
     *
     * Retrieve the complete DMS tree.
     *
     */
    public function testGetProjectDMSTree()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectFolderTreeSerializers
     *
     * Retrieve folder tree for all projects.
     *
     */
    public function testGetProjectFolderTreeSerializers()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectInvitations
     *
     * Retrieve all pending invitations in the project.
     *
     */
    public function testGetProjectInvitations()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectSize
     *
     * Get size of all model files in the project.
     *
     */
    public function testGetProjectSize()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectSubTree
     *
     * Retrieve the complete projects tree of the cloud.
     *
     */
    public function testGetProjectSubTree()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectTree
     *
     * Retrieve the complete DMS tree.
     *
     */
    public function testGetProjectTree()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectUsers
     *
     * Retrieve all users in a project, or a list with a filter by email.
     *
     */
    public function testGetProjectUsers()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjectValidatorVisas
     *
     * List visas where user is a validator.
     *
     */
    public function testGetProjectValidatorVisas()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getProjects
     *
     * Retrieve all projects.
     *
     */
    public function testGetProjects()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getSelfProjects
     *
     * List current user's projects.
     *
     */
    public function testGetSelfProjects()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getSelfUser
     *
     * Get info about the current user.
     *
     */
    public function testGetSelfUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getTag
     *
     * Retrieve a tag.
     *
     */
    public function testGetTag()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getTags
     *
     * Retrieve all tags.
     *
     */
    public function testGetTags()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getUserInvitation
     *
     * Retrieve an invitation.
     *
     */
    public function testGetUserInvitation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getUserInvitations
     *
     * List user's invitations.
     *
     */
    public function testGetUserInvitations()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getValidation
     *
     * Retrieve a validation to a visa.
     *
     */
    public function testGetValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getValidations
     *
     * List all validations to a visa.
     *
     */
    public function testGetValidations()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getVisa
     *
     * Retrieve a visa of a document.
     *
     */
    public function testGetVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getVisaComment
     *
     * Retrieve a comment.
     *
     */
    public function testGetVisaComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getVisaComments
     *
     * List all comment of a visa.
     *
     */
    public function testGetVisaComments()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getVisas
     *
     * List all visas of a document.
     *
     */
    public function testGetVisas()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for inviteCloudUser
     *
     * Invite a cloud administrator.
     *
     */
    public function testInviteCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for inviteProjectUser
     *
     * Invite a project member.
     *
     */
    public function testInviteProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for leaveProject
     *
     * Leave the project.
     *
     */
    public function testLeaveProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for leaveVersionDocumentHistory
     *
     * Leave the history version.
     *
     */
    public function testLeaveVersionDocumentHistory()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for makeHeadVersionDocumentHistory
     *
     * Make the head of the version.
     *
     */
    public function testMakeHeadVersionDocumentHistory()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for pauseVisa
     *
     * Pause a visa of a document.
     *
     */
    public function testPauseVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for resetValidation
     *
     * Reset a validation.
     *
     */
    public function testResetValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for resumeVisa
     *
     * Resume a visa of a document.
     *
     */
    public function testResumeVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateClassification
     *
     * Update some fields of a classification.
     *
     */
    public function testUpdateClassification()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateCloud
     *
     * Update some fields of a cloud.
     *
     */
    public function testUpdateCloud()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateCloudUser
     *
     * Change the user role in the cloud.
     *
     */
    public function testUpdateCloudUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateDocument
     *
     * Update some fields of the document.
     *
     */
    public function testUpdateDocument()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateFolder
     *
     * Update some fields of a folder.
     *
     */
    public function testUpdateFolder()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateGroupFolder
     *
     * Update the permission of a group on a folder.
     *
     */
    public function testUpdateGroupFolder()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateManageGroup
     *
     * Update some fields of a group.
     *
     */
    public function testUpdateManageGroup()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateProject
     *
     * Update some fields of a project.
     *
     */
    public function testUpdateProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateProjectAccessToken
     *
     * Update some fields of a token.
     *
     */
    public function testUpdateProjectAccessToken()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateProjectUser
     *
     * Change the user role in the cloud.
     *
     */
    public function testUpdateProjectUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateTag
     *
     * Update some fields of the tag.
     *
     */
    public function testUpdateTag()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateValidation
     *
     * Update the validator of validation.
     *
     */
    public function testUpdateValidation()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateVisa
     *
     * Update some fields of a visa.
     *
     */
    public function testUpdateVisa()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateVisaComment
     *
     * Update some fields of a comment.
     *
     */
    public function testUpdateVisaComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }
}

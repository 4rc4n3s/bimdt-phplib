<?php
/**
 * BcfApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BIMData API
 *
 * BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.
 *
 * The version of the OpenAPI document: v1 (v1)
 * Contact: support@bimdata.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use OpenAPI\Client\Configuration;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * BcfApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class BcfApiTest extends TestCase
{
    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createComment
     *
     * Create a comment.
     *
     */
    public function testCreateComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createExtensionLabel
     *
     * Create a Label.
     *
     */
    public function testCreateExtensionLabel()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createExtensionPriority
     *
     * Create a Priority.
     *
     */
    public function testCreateExtensionPriority()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createExtensionStage
     *
     * Create a Stage.
     *
     */
    public function testCreateExtensionStage()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createExtensionStatus
     *
     * Create a TopicStatus.
     *
     */
    public function testCreateExtensionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createExtensionType
     *
     * Create a TopicType.
     *
     */
    public function testCreateExtensionType()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createFullTopic
     *
     * Create a Topic with viewpoints and comments.
     *
     */
    public function testCreateFullTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createTopic
     *
     * Create a topic.
     *
     */
    public function testCreateTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for createViewpoint
     *
     * Create a Viewpoint.
     *
     */
    public function testCreateViewpoint()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteComment
     *
     * Delete a comment.
     *
     */
    public function testDeleteComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteExtensionLabel
     *
     * Delete a Label.
     *
     */
    public function testDeleteExtensionLabel()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteExtensionPriority
     *
     * Delete a Priority.
     *
     */
    public function testDeleteExtensionPriority()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteExtensionStage
     *
     * Delete a Stage.
     *
     */
    public function testDeleteExtensionStage()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteExtensionStatus
     *
     * Delete a TopicStatus.
     *
     */
    public function testDeleteExtensionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteExtensionType
     *
     * Delete a TopicType.
     *
     */
    public function testDeleteExtensionType()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteTopic
     *
     * Delete a topic.
     *
     */
    public function testDeleteTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for deleteViewpoint
     *
     * Delete a Viewpoint.
     *
     */
    public function testDeleteViewpoint()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for downloadBcfExport
     *
     * Export project's topics in bcf-xml format.
     *
     */
    public function testDownloadBcfExport()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for fullUpdateBcfProject
     *
     * Update all fields of a BCF project.
     *
     */
    public function testFullUpdateBcfProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for fullUpdateComment
     *
     * Update all fields of a comment.
     *
     */
    public function testFullUpdateComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for fullUpdateFullTopic
     *
     * Update all fields of a topic.
     *
     */
    public function testFullUpdateFullTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for fullUpdateTopic
     *
     * Update all fields of a topic.
     *
     */
    public function testFullUpdateTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for fullUpdateViewpoint
     *
     * Update all fields of a Viewpoint.
     *
     */
    public function testFullUpdateViewpoint()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getBcfProject
     *
     * Retrieve a BCF project.
     *
     */
    public function testGetBcfProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getBcfProjects
     *
     * Retrieve all BCF projects.
     *
     */
    public function testGetBcfProjects()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getColorings
     *
     * Retrieve all colorings of a viewpoint.
     *
     */
    public function testGetColorings()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getComment
     *
     * Retrieve a comment.
     *
     */
    public function testGetComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getComments
     *
     * Retrieve all comments.
     *
     */
    public function testGetComments()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getDetailedExtensions
     *
     * Retrieve project detailed extensions.
     *
     */
    public function testGetDetailedExtensions()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getExtensions
     *
     * Retrieve project extensions.
     *
     */
    public function testGetExtensions()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getFullTopic
     *
     * Retrieve a full topic.
     *
     */
    public function testGetFullTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getFullTopics
     *
     * Retrieve all full topics.
     *
     */
    public function testGetFullTopics()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getSelections
     *
     * Retrieve all selections of a viewpoint.
     *
     */
    public function testGetSelections()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getSnapshot
     *
     * Retrieve the viewpoint' snapshot.
     *
     */
    public function testGetSnapshot()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getTopic
     *
     * Retrieve a topic.
     *
     */
    public function testGetTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getTopicViewpoints
     *
     * Retrieve all viewpoints attached to the topic.
     *
     */
    public function testGetTopicViewpoints()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getTopics
     *
     * Retrieve all topics.
     *
     */
    public function testGetTopics()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getUser
     *
     * Get current user info.
     *
     */
    public function testGetUser()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getViewpoint
     *
     * Retrieve a Viewpoint.
     *
     */
    public function testGetViewpoint()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getViewpoints
     *
     * Retrieve all Viewpoints of a topic.
     *
     */
    public function testGetViewpoints()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for getVisibilities
     *
     * Retrieve all visibilities of a viewpoint.
     *
     */
    public function testGetVisibilities()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for importBcf
     *
     * Import bcf-xml format into this project.
     *
     */
    public function testImportBcf()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateBcfProject
     *
     * Update some fields of a BCF project.
     *
     */
    public function testUpdateBcfProject()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateComment
     *
     * Update some fields of a comment.
     *
     */
    public function testUpdateComment()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateExtensionLabel
     *
     * Update a Label.
     *
     */
    public function testUpdateExtensionLabel()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateExtensionPriority
     *
     * Update a Priority.
     *
     */
    public function testUpdateExtensionPriority()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateExtensionStage
     *
     * Update a Stage.
     *
     */
    public function testUpdateExtensionStage()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateExtensionStatus
     *
     * Update a TopicStatus.
     *
     */
    public function testUpdateExtensionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateExtensionType
     *
     * Update a TopicType.
     *
     */
    public function testUpdateExtensionType()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateFullTopic
     *
     * Update some fields of a topic.
     *
     */
    public function testUpdateFullTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateTopic
     *
     * Update some fields of a topic.
     *
     */
    public function testUpdateTopic()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test case for updateViewpoint
     *
     * Update some fields of a Viewpoint.
     *
     */
    public function testUpdateViewpoint()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }
}
